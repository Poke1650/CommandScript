buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

configurations {
    embed
    compile.extendsFrom(embed)
}

version = "1.0"
group = "xyz.poketech.commandscript"
archivesBaseName = "commandscript"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.2.2627"
    if(file('../run').exists()) {
        runDir = "../run"
    }
    else
    {
        runDir = "run"
    }

    mappings = "snapshot_20171003"
}

dependencies {
    embed "org.javadelight:delight-nashorn-sandbox:0.1.13"
}

compileJava {
    options.encoding = 'UTF-8'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

jar {
    def allowed = "delight-nashorn-sandbox"
    from(configurations.embed) {
        include(allowed + '**')
    }
    def DEPS = ""
    configurations.embed.each {
        dep -> if(dep.getName().startsWith(allowed)) {
            DEPS += ' ' + dep.getName()
        }
    }
    manifest.mainAttributes(
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Built-On": "${project.minecraft.version}",
            "Maven-Artifact":"${project.group}:${project.archivesBaseName}:${project.version}",
            "ContainedDeps": DEPS
    )
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
